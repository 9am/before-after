* {
    box-sizing: border-box;
    ::before,
    ::after {
        box-sizing: border-box;
    }
}

:host {
    --position: to right;
    --val: 0;
    --p: calc(var(--val) * 1%);
    display: grid;
    position: relative;
    overflow: visible;
    &::before {
        --thumb-size: 2px;
        content: 'thumb';
        font-size: 0;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        filter: drop-shadow(0px 0px 1px black);
        background: linear-gradient(
            var(--position),
            #0000 0,
            calc(var(--p) - var(--thumb-size) / 2),
            white calc(var(--p) - var(--thumb-size) / 2),
            white calc(var(--p) + var(--thumb-size) / 2),
            #0000 calc(var(--p) + var(--thumb-size) / 2)
        );
    }
}
:host(:hover) {
    &::before {
        filter: drop-shadow(0px 0px 2px black);
    }
}

#range,
::slotted([slot=before]),
::slotted([slot=after]) {
    grid-area: 1 / 1;
}

#range {
    z-index: 1;
    opacity: 0;
    appearance: none;
    -webkit-appearance: none;
    background: transparent;
    cursor: ew-resize;
    &:focus {
        outline: none;
    }
    &::-webkit-slider-thumb {
      appearance: none;
      -webkit-appearance: none;
      width: 0px;
      height: 0px;
    }
  }

::slotted([slot=before]) {
    mask: linear-gradient(var(--position), white 0, var(--p), #0000 0);
}

::slotted([slot=after]) {
    mask: linear-gradient(var(--position), #0000 0, var(--p), white 0);
}

:host([orient=vertical]) {
    --position: to bottom;
    #range[orient=vertical] {
        appearance: slider-vertical;
        cursor: ns-resize;
        transform: rotate(0.5turn);
    }
}

:host([varient=radial]) {
    --position: circle at center;
    &::before {
        background: radial-gradient(
            var(--position),
            #0000 0,
            calc(var(--p) - var(--thumb-size) / 2),
            white calc(var(--p) - var(--thumb-size) / 2),
            white calc(var(--p) + var(--thumb-size) / 2),
            #0000 calc(var(--p) + var(--thumb-size) / 2)
        );
    }
    ::slotted([slot=before]) {
        mask: radial-gradient(var(--position), white 0, var(--p), #0000 0);
    }

    ::slotted([slot=after]) {
        mask: radial-gradient(var(--position), #0000 0, var(--p), white 0);
    }
}
